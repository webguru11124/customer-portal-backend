<?php

declare(strict_types=1);

namespace App\Models\External;

use App\Interfaces\Repository\ExternalRepository;
use App\Interfaces\Repository\TicketRepository;
use App\Repositories\Relations\BelongsTo;
use Aptive\PestRoutesSDK\Resources\Tickets\TicketActiveStatus;
use Aptive\PestRoutesSDK\Resources\Tickets\TicketInvoiceType;
use Aptive\PestRoutesSDK\Resources\Tickets\TicketTemplateType;

/**
 * @property-read AppointmentModel|null $appointment
 */
class TicketModel extends AbstractExternalModel
{
    public int $id;
    public int $customerId;
    public int $billToAccountId;
    public int $officeId;
    public \DateTimeInterface $dateCreated;
    public \DateTimeInterface $invoiceDate;
    public \DateTimeInterface|null $dateUpdated;
    public TicketActiveStatus $active;
    public float $subTotal;
    public float $taxAmount;
    public float $total;
    public float $serviceCharge;
    public bool $isServiceTaxable;
    public float $productionValue;
    public float $taxRate;
    public int|null $appointmentId;
    public float $balance;
    public int|null $subscriptionId;
    public int|null $autoGenerated;
    public TicketInvoiceType|null $autoGeneratedType;
    public int|null $renewalId;
    public int $serviceId;
    /** @var int[] */
    public array $items;
    public int $invoiceNumber;
    public TicketTemplateType $templateType;
    public string|null $glNumber;

    /**
     * @return class-string<ExternalRepository<self>>
     */
    public static function getRepositoryClass(): string
    {
        return TicketRepository::class;
    }

    public function getRelations(): array
    {
        return [
            'appointment' => new BelongsTo(AppointmentModel::class, 'appointmentId'),
        ];
    }
}
